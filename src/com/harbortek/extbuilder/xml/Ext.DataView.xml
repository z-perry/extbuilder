<?xml version="1.0" encoding="UTF-8"?>
<Component extClass="Ext.DataView" extends="Ext.BoxComponent">
	<Properties>
		<Property name="deferEmptyText" type="Boolean" comment="True to defer emptyText being applied until the store's first load" />
		<Property name="emptyText" type="String" comment="The text to display in the view when there is no data to display (defaults to '')." />
		<Property name="itemSelector" type="String" comment="A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes this DataView will be working with." />
		<Property name="loadingText" type="String" comment="A string to display during data load operations (defaults to undefined).  If specified, this text will be displayed in a loading div and the view's contents will be cleared while loading, otherwise the view's contents will continue to display normally until the new data is loaded and the contents are replaced." />
		<Property name="multiSelect" type="Boolean" comment="True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of {@link #singleSelect} (defaults to false)." />
		<Property name="overClass" type="String" comment="A CSS class to apply to each item in the view on mouseover (defaults to undefined)." />
		<Property name="selectedClass" type="String" comment="A CSS class to apply to each selected item in the view (defaults to 'x-view-selected')." />
		<Property name="simpleSelect" type="Boolean" comment="True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to false)." />
		<Property name="singleSelect" type="Boolean" comment="True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if {@link #multiSelect} = true, this value will be ignored." />
		<Property name="store" type="Ext.data.Store" comment="The {@link Ext.data.Store} to bind this DataView to." />
		<Property name="tpl" type="String/Array" comment="The HTML fragment or an array of fragments that will make up the template used by this DataView.  This should be specified in the same format expected by the constructor of {@link Ext.XTemplate}." />
		<Property name="trackOver" type="Boolean" comment="True to enable mouseenter and mouseleave events" />
	</Properties>
	<Events>
		<Event name="beforeclick" comment="Fires before a click is processed. Returns false to cancel the default action." >
			<Param name="this" type="Ext.DataView" />
			<Param name="index" type="Number" comment="The index of the target node" />
			<Param name="node" type="HTMLElement" comment="The target node" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="beforeselect" comment="Fires before a selection is made. If any handlers return false, the selection is cancelled." >
			<Param name="this" type="Ext.DataView" />
			<Param name="node" type="HTMLElement" comment="The node to be selected" />
			<Param name="selections" type="Array" comment="Array of currently selected nodes" />
		</Event>
		<Event name="click" comment="Fires when a template node is clicked." >
			<Param name="this" type="Ext.DataView" />
			<Param name="index" type="Number" comment="The index of the target node" />
			<Param name="node" type="HTMLElement" comment="The target node" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="containerclick" comment="Fires when a click occurs and it is not on a template node." >
			<Param name="this" type="Ext.DataView" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="contextmenu" comment="Fires when a template node is right clicked." >
			<Param name="this" type="Ext.DataView" />
			<Param name="index" type="Number" comment="The index of the target node" />
			<Param name="node" type="HTMLElement" comment="The target node" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="dblclick" comment="Fires when a template node is double clicked." >
			<Param name="this" type="Ext.DataView" />
			<Param name="index" type="Number" comment="The index of the target node" />
			<Param name="node" type="HTMLElement" comment="The target node" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="mouseenter" comment="Fires when the mouse enters a template node. trackOver:true or an overCls must be set to enable this event." >
			<Param name="this" type="Ext.DataView" />
			<Param name="index" type="Number" comment="The index of the target node" />
			<Param name="node" type="HTMLElement" comment="The target node" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="mouseleave" comment="Fires when the mouse leaves a template node. trackOver:true or an overCls must be set to enable this event." >
			<Param name="this" type="Ext.DataView" />
			<Param name="index" type="Number" comment="The index of the target node" />
			<Param name="node" type="HTMLElement" comment="The target node" />
			<Param name="e" type="Ext.EventObject" comment="The raw event object" />
		</Event>
		<Event name="selectionchange" comment="Fires when the selected nodes change." >
			<Param name="this" type="Ext.DataView" />
			<Param name="selections" type="Array" comment="Array of the selected nodes" />
		</Event>
	</Events>
</Component>
